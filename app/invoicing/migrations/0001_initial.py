# Generated by Django 2.2.12 on 2022-05-24 15:41

import app.invoicing.utils.storage
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sequences', '0001_initial'),
        ('core', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvoicingSerial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serie', models.CharField(default='F', max_length=80, verbose_name='Serie')),
                ('status', models.BooleanField(default=True, verbose_name='Estatus')),
                ('is_active', models.BooleanField(default=True, verbose_name='Serie activa')),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Business', verbose_name='Negocio')),
                ('sequence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sequences.Sequence', verbose_name='Serie y Folio')),
            ],
            options={
                'verbose_name': 'Serie y Folio',
                'verbose_name_plural': 'Serie y Folios (Modulo facturación manual)',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(default='3.3', max_length=5)),
                ('taxpayer_id', models.CharField(max_length=25, null=True)),
                ('name', models.CharField(max_length=250, null=True)),
                ('certificate_number', models.CharField(max_length=30, null=True)),
                ('serial', models.CharField(max_length=30, null=True)),
                ('folio', models.CharField(max_length=50, null=True)),
                ('emission_date', models.DateTimeField(null=True)),
                ('stamping_date', models.DateTimeField(null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('status', models.CharField(choices=[('E', 'Error'), ('U', 'Uploaded'), ('P', 'Processed'), ('S', 'Stamped'), ('F', 'Finished'), ('C', 'Cancelled'), ('O', 'Other')], default='E', max_length=1)),
                ('status_sat', models.CharField(choices=[('V', 'Valid'), ('C', 'Cancelled')], default='V', max_length=1)),
                ('payment_way', models.CharField(choices=[('01', 'Efectivo'), ('02', 'Cheque nominativo'), ('03', 'Transferencia electrónica de fondos'), ('04', 'Tarjeta de crédito'), ('05', 'Monedero electrónico'), ('06', 'Dinero electrónico'), ('08', 'Vales de despensa'), ('12', 'Dación en pago'), ('13', 'Pago por subrogación'), ('14', 'Pago por consignación'), ('15', 'Condonación'), ('17', 'Compensación'), ('23', 'Novación'), ('24', 'Confusión'), ('25', 'Remisión de deuda'), ('26', 'Prescripción o caducidad'), ('27', 'A satisfacción del acreedor'), ('28', 'Tarjeta de débito'), ('29', 'Tarjeta de servicios'), ('30', 'Aplicación de anticipos'), ('31', 'Intermediario pagos'), ('99', 'Por definir')], default='01', max_length=2, null=True)),
                ('payment_method', models.CharField(choices=[('PUE', 'Pago en una sola exhibición'), ('PPD', 'Pago en parcialidades o diferido')], default='PUE', max_length=3, null=True)),
                ('type', models.CharField(choices=[('I', 'Ingreso'), ('E', 'Egreso'), ('T', 'Traslado'), ('N', 'Nomina'), ('P', 'Pago')], default='I', max_length=1)),
                ('cancellation_date', models.DateTimeField(blank=True, null=True)),
                ('cfdi_use', models.CharField(choices=[('G01', 'Adquisición de mercancias'), ('G02', 'Devoluciones, descuentos o bonificaciones'), ('G03', 'Gastos en general'), ('I01', 'Construcciones'), ('I02', 'Mobilario y equipo de oficina por inversiones'), ('I03', 'Equipo de transporte'), ('I04', 'Equipo de computo y accesorios'), ('I05', 'Dados, troqueles, moldes, matrices y herramental'), ('I06', 'Comunicaciones telefónicas'), ('I07', 'Comunicaciones satelitales'), ('I08', 'Otra maquinaria y equipo'), ('D01', 'Honorarios médicos, dentales y gastos hospitalarios.'), ('D02', 'Gastos médicos por incapacidad o discapacidad'), ('D03', 'Gastos funerales.'), ('D04', 'Donativos.'), ('D05', 'Intereses reales efectivamente pagados por créditos hipotecarios (casa habitación).'), ('D06', 'Aportaciones voluntarias al SAR.'), ('D07', 'Primas por seguros de gastos médicos.'), ('D08', 'Gastos de transportación escolar obligatoria.'), ('D09', 'Depósitos en cuentas para el ahorro, primas que tengan como base planes de pensiones.'), ('D10', 'Pagos por servicios educativos (colegiaturas)'), ('P01', 'Por definir')], default='P01', max_length=255)),
                ('pac_taxpayer_id', models.CharField(max_length=14)),
                ('uuid', models.CharField(max_length=40, null=True)),
                ('rtaxpayer_id', models.CharField(max_length=25)),
                ('rname', models.CharField(max_length=255, null=True)),
                ('uuid_rel', models.CharField(max_length=36, null=True)),
                ('expedition_place', models.CharField(max_length=250)),
                ('total_tra', models.DecimalField(decimal_places=6, default=0.0, max_digits=18)),
                ('total_ret', models.DecimalField(decimal_places=6, default=0.0, max_digits=18)),
                ('seal', models.TextField()),
                ('_xml', models.FileField(db_column='xml', null=True, storage=app.invoicing.utils.storage.OverrideFileSystemStorage(), upload_to=app.invoicing.utils.storage.invoice_storage)),
                ('internal_notes', models.TextField(null=True)),
                ('error_messages', django.contrib.postgres.fields.jsonb.JSONField(null=True, verbose_name='Mensajes de error')),
                ('snapshot', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('task_id', models.CharField(max_length=40, null=True)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Branch')),
            ],
            options={
                'verbose_name': 'Factura',
                'verbose_name_plural': 'Facturas (Modulo facturación manual)',
            },
        ),
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_idenfier_number', models.CharField(blank=True, max_length=125, null=True, verbose_name='Tax Identifier Number')),
                ('company_name', models.CharField(blank=True, max_length=125, null=True, verbose_name='Company Name')),
                ('organization_id', models.CharField(blank=True, max_length=125, null=True, verbose_name='Organization ID')),
                ('address_name', models.CharField(blank=True, max_length=125, null=True, verbose_name='Address name')),
                ('city_name', models.CharField(blank=True, max_length=125, null=True, verbose_name='City')),
                ('postal_zone', models.CharField(blank=True, max_length=125, null=True, verbose_name='Postal Zone')),
                ('country', models.CharField(blank=True, max_length=125, null=True, verbose_name='Country')),
                ('province', models.CharField(blank=True, max_length=125, null=True, verbose_name='Province')),
                ('language', models.CharField(blank=True, max_length=125, null=True, verbose_name='Language')),
                ('currency', models.CharField(blank=True, max_length=125, null=True, verbose_name='Currency')),
                ('full_name', models.CharField(blank=True, max_length=125, null=True, verbose_name='Full name')),
                ('department', models.CharField(blank=True, max_length=125, null=True, verbose_name='Department')),
                ('web', models.CharField(blank=True, max_length=125, null=True, verbose_name='Web')),
                ('email_contact', models.CharField(blank=True, max_length=125, null=True, verbose_name='Email')),
                ('telephone_contact', models.CharField(blank=True, max_length=125, null=True, verbose_name='Phone')),
                ('category', models.CharField(blank=True, max_length=125, null=True, verbose_name='Category')),
                ('method_category', models.CharField(blank=True, max_length=125, null=True, verbose_name='Method')),
                ('payment_method', models.CharField(blank=True, max_length=125, null=True, verbose_name='Payment method')),
                ('term', models.CharField(blank=True, max_length=125, null=True, verbose_name='Term')),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Business', verbose_name='Negocio')),
            ],
            options={
                'verbose_name': 'Buyer',
                'verbose_name_plural': 'Compradores (Modulo facturación manual)',
            },
        ),
        migrations.CreateModel(
            name='Receiver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=125, null=True, verbose_name='Razón Social/Nombre')),
                ('use_cfdi', models.CharField(choices=[('G01', 'Adquisición de mercancias'), ('G02', 'Devoluciones, descuentos o bonificaciones'), ('G03', 'Gastos en general'), ('I01', 'Construcciones'), ('I02', 'Mobilario y equipo de oficina por inversiones'), ('I03', 'Equipo de transporte'), ('I04', 'Equipo de computo y accesorios'), ('I05', 'Dados, troqueles, moldes, matrices y herramental'), ('I06', 'Comunicaciones telefónicas'), ('I07', 'Comunicaciones satelitales'), ('I08', 'Otra maquinaria y equipo'), ('D01', 'Honorarios médicos, dentales y gastos hospitalarios.'), ('D02', 'Gastos médicos por incapacidad o discapacidad'), ('D03', 'Gastos funerales.'), ('D04', 'Donativos.'), ('D05', 'Intereses reales efectivamente pagados por créditos hipotecarios (casa habitación).'), ('D06', 'Aportaciones voluntarias al SAR.'), ('D07', 'Primas por seguros de gastos médicos.'), ('D08', 'Gastos de transportación escolar obligatoria.'), ('D09', 'Depósitos en cuentas para el ahorro, primas que tengan como base planes de pensiones.'), ('D10', 'Pagos por servicios educativos (colegiaturas)'), ('P01', 'Por definir')], default='601', max_length=3, verbose_name='Uso CFDI')),
                ('taxpayer_id', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('[A-Z&Ñ]{3,4}[0-9]{2}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])[A-Z0-9]{2}[0-9A]', 'El RFC no cumple con el patrón requerido. Estructura inválida.')], verbose_name='R.F.C.')),
                ('status', models.BooleanField(default=True, verbose_name='Estatus')),
                ('emails', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254, null=True), null=True, size=None, verbose_name='Correos')),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Business', verbose_name='Negocio')),
            ],
            options={
                'verbose_name': 'Receptor',
                'verbose_name_plural': 'Receptores (Modulo facturación manual)',
                'unique_together': {('business', 'taxpayer_id')},
            },
        ),
        migrations.CreateModel(
            name='ProdServ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField()),
                ('origin_country', models.CharField(max_length=5, verbose_name='Origin Country')),
                ('unit_code', models.CharField(max_length=3, verbose_name='Unit Code')),
                ('list_id', models.CharField(max_length=3, verbose_name='List ID')),
                ('unit_price', models.FloatField()),
                ('item_classification_code', models.CharField(max_length=10, verbose_name='Item Classification Code')),
                ('tax_category_code', models.CharField(blank=True, default='', max_length=3, null=True, verbose_name='Tax Category Code')),
                ('tax_percent', models.FloatField(blank=True, null=True)),
                ('tax_scheme', models.CharField(blank=True, default='VAT', max_length=5, null=True, verbose_name='Tax Scheme')),
                ('standard_item_identifier', models.CharField(blank=True, default='', max_length=15, null=True)),
                ('standard_item_scheme', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('creation_date', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Business', verbose_name='Negocio')),
            ],
            options={
                'verbose_name': 'Producto o Servicio',
                'verbose_name_plural': 'Productos y Servicios',
                'unique_together': {('business', 'item_classification_code')},
            },
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['rtaxpayer_id'], name='invoicing_i_rtaxpay_a1e748_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='invoice',
            unique_together={('seal', 'uuid')},
        ),
    ]
