# Generated by Django 2.2.12 on 2022-05-24 15:41

import app.core.models
import app.core.storage
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('MEX', 'México'), ('USA', 'Estados Unidos'), ('MA', 'Morocco')], default='MEX', max_length=3)),
                ('state', models.CharField(blank=True, max_length=128, null=True)),
                ('city', models.CharField(blank=True, max_length=128, null=True)),
                ('zipcode', models.CharField(default='58000', max_length=10)),
                ('external_number', models.CharField(blank=True, max_length=10, null=True)),
                ('internal_number', models.CharField(blank=True, max_length=10, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('street', models.CharField(blank=True, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BadInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=50)),
                ('error', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxpayer_id', models.CharField(max_length=14, null=True, unique=True, verbose_name='R.F.C.')),
                ('fiscal_regime', models.CharField(blank=True, choices=[('601', 'General de Ley Personas Morales'), ('603', 'Personas Morales con Fines no Lucrativos'), ('605', 'Sueldos y Salarios e Ingresos Asimilados a Salarios'), ('606', 'Arrendamiento'), ('608', 'Demás ingresos'), ('609', 'Consolidación'), ('610', 'Residentes en el Extranjero sin Establecimiento Permanente en México'), ('611', 'Ingresos por Dividendos (socios y accionistas)'), ('612', 'Personas Físicas con Actividades Empresariales y Profesionales'), ('614', 'Ingresos por intereses'), ('616', 'Sin obligaciones fiscales'), ('620', 'Sociedades Cooperativas de Producción que optan por diferir sus ingresos'), ('621', 'Incorporación Fiscal'), ('622', 'Actividades Agrícolas, Ganaderas, Silvícolas y Pesqueras'), ('623', 'Opcional para Grupos de Sociedades'), ('624', 'Coordinados'), ('628', 'Hidrocarburos'), ('607', 'Régimen de Enajenación o Adquisición de Bienes'), ('629', 'De los Regímenes Fiscales Preferentes y de las Empresas Multinacionales'), ('630', 'Enajenación de acciones en bolsa de valores'), ('615', 'Régimen de los ingresos por obtención de premios')], default='601', max_length=3, verbose_name='Régimen Fiscal')),
                ('name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Razón Social')),
                ('logo', models.FileField(blank=True, max_length=200, null=True, storage=app.core.models.OverrideFileSystemStorage(location='/var/unnamedpac/logo'), upload_to=app.core.storage.logo_storage, verbose_name='Logo')),
                ('email', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254, null=True), default=list, null=True, size=None)),
                ('status', models.CharField(choices=[('A', 'Activated'), ('D', 'Deleted'), ('S', 'Suspended'), ('P', 'PendingOfFillWizard')], default='P', max_length=1, verbose_name='Estatus')),
                ('has_fiel', models.BooleanField(default=False)),
                ('default', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('fk_access', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('contract', models.BooleanField(default=False)),
                ('privacy', models.BooleanField(default=False)),
                ('schemeid', models.CharField(blank=True, max_length=4, null=True)),
                ('organization_id', models.CharField(blank=True, max_length=100, null=True)),
                ('seller_elect_address', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Address', verbose_name='Dirección')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SatFaq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500, verbose_name='Pregunta')),
                ('anwser', models.TextField(verbose_name='Respuesta')),
                ('can_show', models.BooleanField(verbose_name='Mostrar ')),
                ('added', models.DateField(auto_now_add=True, verbose_name='Fecha adición ')),
            ],
        ),
        migrations.CreateModel(
            name='SatFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.CharField(db_index=True, max_length=60)),
                ('_cer', models.FileField(db_column='cer', max_length=200, storage=app.core.models.OverrideFileSystemStorage(), upload_to=app.core.storage.satfile_storage)),
                ('_key', models.FileField(db_column='key', max_length=200, storage=app.core.models.OverrideFileSystemStorage(), upload_to=app.core.storage.satfile_storage)),
                ('passphrase', models.CharField(max_length=256, null=True)),
                ('certificate_type', models.CharField(choices=[('F', 'Fiel'), ('C', 'CSD')], default='C', max_length=1)),
                ('status', models.CharField(choices=[('A', 'Active'), ('S', 'Suspended'), ('C', 'Cancelled'), ('R', 'Revoked')], default='A', max_length=1)),
                ('expedition_date', models.DateTimeField(null=True)),
                ('expiration_date', models.DateTimeField(null=True)),
                ('default', models.BooleanField(default=False)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Business')),
            ],
        ),
        migrations.CreateModel(
            name='PasswordHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_rotation_date', models.DateTimeField(null=True)),
                ('old', models.CharField(max_length=128, null=True, verbose_name='password')),
                ('older', models.CharField(max_length=128, null=True, verbose_name='password')),
                ('oldest', models.CharField(max_length=128, null=True, verbose_name='password')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Manifest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signed', models.BooleanField(default=False)),
                ('signed_contract_xml', models.FileField(default=None, storage=app.core.models.OverrideFileSystemStorage(location='/var/unnamedpac/'), upload_to=app.core.storage.xml_storage)),
                ('signed_contract_pdf', models.FileField(default=None, storage=app.core.models.OverrideFileSystemStorage(location='/var/unnamedpac/'), upload_to=app.core.storage.pdf_storage)),
                ('date_signed', models.DateTimeField(blank=True, null=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Business')),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.SmallIntegerField(choices=[(0, 'Action must be taken immediately'), (1, 'Critical conditions'), (2, 'Error conditions'), (3, 'Warning conditions'), (4, 'Normal but significant conditions'), (5, 'Informational'), (6, 'Debug-level messages')])),
                ('action', models.CharField(choices=[('C', 'Create'), ('R', 'Read'), ('U', 'Update'), ('D', 'Delete')], max_length=1)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('module', models.CharField(choices=[('C', 'Clients'), ('I', 'Invoicing'), ('U', 'Users'), ('A', 'Cancelation'), ('L', 'Logs'), ('S', 'Support'), ('T', 'SAT'), ('M', 'Admin'), ('B', 'Billing'), ('O', 'Others')], max_length=2)),
                ('err_exception', models.TextField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-timestamp',),
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('zipcode', models.CharField(max_length=5)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('number', models.CharField(blank=True, max_length=45, null=True)),
                ('neighborhood', models.CharField(blank=True, max_length=45, null=True)),
                ('locality', models.CharField(blank=True, max_length=45, null=True)),
                ('municipality', models.CharField(blank=True, max_length=45, null=True)),
                ('state', models.CharField(blank=True, max_length=45, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=16, max_digits=22, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=16, max_digits=22, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Business')),
            ],
        ),
        migrations.AddIndex(
            model_name='badinvoice',
            index=models.Index(fields=['uuid'], name='uuid_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='satfile',
            unique_together={('business', 'serial')},
        ),
    ]
